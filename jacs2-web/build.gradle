apply plugin: 'application'

mainClassName = 'org.janelia.jacs2.app.Application'

project(":jacs2-web") {
    dependencies {
        compile project(":jacs2-services"),
                CDI_API_LIB,
                CDI_SERVLET_LIB,
                CMDLINE_ARG_LIB,
                JACKSON_JAXRS_JSON_PROVIDER,
                JAVAX_SERVLET_API_LIB,
                JAX_RS_API_LIB,
                JAX_RS_CDI_EXT_LIB,
                JAX_RS_CONTAINERS_LIB,
                JAX_RS_CORE_LIB,
                JAX_RS_SERVER_LIB,
                UNDERTOW_CORE_LIB,
                UNDERTOW_SERVLET_LIB
    }

    task createAllStartScripts() << {
     	 // just a placeholder
    }
    
    def scripts = [
    	'mainAsyncServicesApp': 'org.janelia.jacs2.app.AsyncServicesApp',
	'mainSyncServicesApp': 'org.janelia.jacs2.app.SyncServicesApp'

    ]

    scripts.each() { scriptName, className ->
          def t = tasks.create(name: scriptName+'StartScript', type: CreateStartScripts) {
              mainClassName = className
              applicationName = scriptName
              outputDir = new File(project.buildDir, 'scripts')
              classpath = jar.outputs.files + project.configurations.runtime
    	  }
      	  applicationDistribution.into("bin") {
              from(t)
              fileMode = 0755
   	  }
    	  createAllStartScripts.dependsOn(t)
    }
}
